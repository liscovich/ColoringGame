<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<!-- Configurer that replaces ${...} placeholders with values from a properties file -->
	<!-- JDBC-related settings for the dataSource definition below -->
	<context:property-placeholder location="classpath:jdbc.properties" />
	<context:component-scan base-package="edu.harvard.med.hcp" name-generator="edu.harvard.med.hcp.bean.InterfaceBeanNameGenerator"/>
	<context:annotation-config/>

	<!-- DataSource configuration for Apache Commons DBCP. -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
		p:driverClassName="${jdbc.driverClassName}" 
		p:url="${jdbc.url}" 
		p:username="${jdbc.username}"
		p:password="${jdbc.password}" />

	<bean id="sessionFactory" class="edu.harvard.med.hcp.bean.CustomSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property>
		<property name="configurationClass">
			<value>org.hibernate.cfg.AnnotationConfiguration</value>
		</property>
		<property name="namingStrategy" ref="namingStrategy"/>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean below) -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
			<!-- all methods starting with 'get' are read-only -->
			<tx:method name="get*" read-only="true" />
			<!-- other methods use the default transaction settings (see below) -->
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<!-- Hide all exceptions thrown by dao layer -->
	<bean id="daoExceptionAdvice" class="edu.harvard.med.hcp.bean.DaoExceptionInterceptor" />

	<!-- Method logging advice -->
	<bean id="methodLoggingAdvice" class="edu.harvard.med.hcp.bean.LoggingInterceptor" />

	<!-- ensure that the above transactional advice runs for any execution of 
		any operation defined by the com.kb.manager package interface -->
	<aop:config>
		<aop:pointcut id="transactionRequired" expression="execution(* edu.harvard.med.hcp.service.*.*(..))" />
		<aop:pointcut id="loggingRequired" expression="execution(* edu.harvard.med.hcp.service.*.*(..)) or execution(* edu.harvard.med.hcp.dao.*.*(..))" />
		<aop:advisor advice-ref="daoExceptionAdvice" order="1" pointcut-ref="transactionRequired" />
		<aop:advisor advice-ref="transactionAdvice" order="2" pointcut-ref="transactionRequired" />
		<aop:advisor advice-ref="methodLoggingAdvice" order="3" pointcut-ref="loggingRequired" />
	</aop:config>
</beans>